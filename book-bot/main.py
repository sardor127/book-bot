import logging
from aiogram import Bot, Dispatcher, types, executor
from dotenv import load_dotenv
import os

load_dotenv()

API_TOKEN = os.getenv("TELEGRAM_TOKEN")
OWNER_ID = int(os.getenv("OWNER_ID"))

logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=["start"])
async def send_welcome(message: types.Message):
    await message.reply("‚úã –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–Ω–∏–≥–∏.")

@dp.message_handler(content_types=types.ContentType.PHOTO)
async def handle_photo(message: types.Message):
    if message.from_user.id == OWNER_ID:
        return  # –≤–ª–∞–¥–µ–ª–µ—Ü –Ω–µ –¥–æ–ª–∂–µ–Ω –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å–≤–æ–∏ —Ñ–æ—Ç–æ

    # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Ñ–æ—Ç–æ –≤–ª–∞–¥–µ–ª—å—Ü—É
    await bot.send_photo(
        OWNER_ID,
        photo=message.photo[-1].file_id,
        caption=f"–ü–æ–ª—É—á–µ–Ω —á–µ–∫ –æ—Ç @{message.from_user.username or '–±–µ–∑ –Ω–∏–∫–∞'} ({message.from_user.id})",
        reply_markup=types.InlineKeyboardMarkup().add(
            types.InlineKeyboardButton("üìò PDF –Ω–∞ —Ä—É—Å—Å–∫–æ–º", callback_data=f"pdf_ru:{message.from_user.id}"),
            types.InlineKeyboardButton("üìó PDF –Ω–∞ —É–∑–±–µ–∫—Å–∫–æ–º", callback_data=f"pdf_uz:{message.from_user.id}"),
            types.InlineKeyboardButton("‚ùå –û—Ç–∫–∞–∑–∞—Ç—å", callback_data=f"reject:{message.from_user.id}")
        )
    )

@dp.callback_query_handler(lambda c: c.data)
async def process_callback(callback_query: types.CallbackQuery):
    action, user_id = callback_query.data.split(":")
    user_id = int(user_id)

    if callback_query.from_user.id != OWNER_ID:
        await callback_query.answer("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤.", show_alert=True)
        return

    if action == "pdf_ru":
        await bot.send_document(user_id, types.InputFile("book_ru.pdf"))
        await callback_query.answer("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ PDF –Ω–∞ —Ä—É—Å—Å–∫–æ–º.")
    elif action == "pdf_uz":
        await bot.send_document(user_id, types.InputFile("book_uz.pdf"))
        await callback_query.answer("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ PDF –Ω–∞ —É–∑–±–µ–∫—Å–∫–æ–º.")
    elif action == "reject":
        await bot.send_message(user_id, "‚õîÔ∏è –í–∞—à —á–µ–∫ –±—ã–ª –æ—Ç–∫–ª–æ–Ω—ë–Ω.")
        await callback_query.answer("–û—Ç–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
